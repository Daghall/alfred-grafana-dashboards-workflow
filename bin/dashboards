#!/usr/bin/env ruby

require 'uri'
require 'net/https'
require 'json'

grafana_host = ARGV[0]
search_term = ARGV[1]

grafana_host_uri = URI.parse(grafana_host)
http = Net::HTTP.new(grafana_host_uri.host, grafana_host_uri.port)
http.use_ssl = (grafana_host_uri.scheme == 'https')
request = Net::HTTP::Get.new('/api/search/')
response = http.request(request)
if response.code == '200'
  data = JSON.parse(response.body)
else
  abort "ERROR: server responded with: #{response.code}"
end

# Add logging route
explore = {}
explore['title'] = "Logs"
explore['custom-uri'] = "explore"
data.push(explore)

sorted_data = data.sort { |a, b| a['title'] <=> b['title'] }
if search_term.nil?
  filtered_data = sorted_data
else
  filtered_data = sorted_data.select do |dashboard|
    # match by full title
    dashboard['title'] =~ /#{search_term}/i ||
      # or by first letter of each term separated by space or hyphen
      dashboard['title'].split(/\s|\-/).map { |term| term[0] }.join =~ /#{search_term}/i
  end
end

puts '<?xml version="1.0"?>'
puts '<items>'
filtered_data.each do |dashboard|
  uri = dashboard['custom-uri'] ? dashboard['custom-uri'] : "dashboard/#{dashboard['uri']}"
  puts <<-EOS
    <item arg="#{grafana_host}/#{uri}" autocomplete="#{dashboard['title']}">
      <title>#{dashboard['title']}</title>
    </item>
  EOS
end
puts '</items>'
